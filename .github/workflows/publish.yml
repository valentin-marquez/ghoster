name: Release

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      publishMS:
        description: "Publish to MS marketplace"
        type: boolean
        required: true
        default: true
      publishGH:
        description: "Publish to GitHub releases"
        type: boolean
        required: true
        default: true

permissions:
  contents: write

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install dependencies
        run: npm install
      - name: Package Extension
        run: npx vsce package
        id: package
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: "*.vsix"

  create_tag:
    runs-on: ubuntu-latest
    needs: package
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get version from package.json
        id: get_version
        run: |
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | xargs)
          echo "VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
      - name: Create Git tag
        id: create_tag
        run: |
          git tag v${{ env.VERSION }}
          git push origin v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publishMS:
    runs-on: ubuntu-latest
    needs: create_tag
    if: github.event.inputs.publishMS == 'true'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .
      - name: Publish to VS Code Marketplace
        run: npx vsce publish -p ${{ secrets.VSCE_PAT }} --packagePath *.vsix

  publishGH:
    runs-on: ubuntu-latest
    needs: create_tag
    if: github.event.inputs.publishGH == 'true'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          files: "*.vsix"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
