name: Release
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      publishMS:
        description: 'Publish to MS marketplace'
        type: boolean
        required: true
        default: "true"
      publishOVSX:
        description: 'Publish to OpenVSX'
        type: boolean
        required: true
        default: "true"
      publishGH:
        description: 'Publish to GitHub releases'
        type: boolean
        required: true
        default: "true"

jobs:
  package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - name: Install dependencies
        run: npm install
      - name: Package Extension
        run: npx vsce package
        id: package
      - uses: actions/upload-artifact@v3
        with:
          name: package
          path: *.vsix

  publishMS:
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishMS == 'true'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .
      - name: Publish to VS Code Marketplace
        run: npx vsce publish -p ${{ secrets.VSCE_PAT }} --packagePath *.vsix

  publishOVSX:
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishOVSX == 'true'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .
      - name: Publish to OpenVSX
        run: npx ovsx publish *.vsix -p ${{ secrets.OVSX_PAT }}

  publishGH:
    runs-on: ubuntu-latest
    needs: package
    if: github.event.inputs.publishGH == 'true'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: package
          path: .
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: *.vsix
          asset_name: ${package_name}.vsix
          asset_content_type: application/zip
